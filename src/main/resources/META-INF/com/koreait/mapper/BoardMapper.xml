<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.koreait.mapper.BoardMapper">
<!-- 
	두 가지의 기능(데이터 개수 처리, 검색 조건 처리)이 하나의 쿼리 안에 있기 때문에 가독성이 떨어진다.
	따라서 SQL 태그로 분리한 후 include를 사용하면 코드가 간결해져서 가독성이 좋아진다.
 -->
 	<sql id="criteria">
 		<if test="type != null and keyword != null">
		<trim prefix="(" suffix=") AND" prefixOverrides="OR">
			<!-- 전달받은 객체의 메소드를 사용하고자 할 때에는 getMethod()형식의 이름으로 설정한다. -->
			<!-- 설정된 메소드는 동적퀴리에서 get을 제외한 method 라는 Alias로 사용된다. -->
			<!-- Criteria에 선언된 getTypeArr()를 사용한다면 typeArr로 작성한다. -->
			<!-- 동적 쿼리에서는 해당 객체의 메소드도 프로퍼티로 인식하기 때문에 메소드를 getter형식으로 작성해주어야 사용이 가능하다. -->
			<foreach item="type" collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'T'.toString()">
							(TITLE LIKE '%' || #{keyword} || '%')
						</when>
						<when test="type == 'C'.toString()">
							(CONTENT LIKE '%' || #{keyword} || '%')
						</when>
						<when test="type == 'W'.toString()">
							(WRITER LIKE '%' || #{keyword} || '%')
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
		</if>
 	</sql>
 	
	<select id="getListWithPaging" resultType="com.koreait.domain.BoardVO">
	<![CDATA[	
		SELECT BNO, TITLE, CONTENT, WRITER, REGDATE, UPDATEDATE
		FROM
			(SELECT /*+ INDEX_DESC(TBL_BOARD PK_BOARD) */ROWNUM RN, BNO, TITLE, CONTENT, WRITER, REGDATE, UPDATEDATE 
			FROM TBL_BOARD 
			WHERE 
	]]>
	<include refid="criteria"></include>
	<![CDATA[		
			ROWNUM <= #{pageNum} * #{amount})
		WHERE RN >(#{pageNum} -1) * #{amount}
	]]>
	</select>
	
	<!-- getTotal에 criteria를 사용해서 검색 조건 처리하기 -->
	<select id="getTotal" resultType="_int"> <!-- java.lang.String -> string(Alias) / java.lang.Integer -> int(Alias) -->
		<![CDATA[
			SELECT COUNT(*) FROM TBL_BOARD WHERE 
		]]>
		<include refid="criteria"></include>
		<![CDATA[
			BNO > 0
		]]>
	</select>
	
	<select id="getList" resultType="com.koreait.domain.BoardVO">
		<![CDATA[
			SELECT * FROM TBL_BOARD WHERE BNO > 0
		]]>
	</select>
	
	<insert id="insert">
		INSERT INTO TBL_BOARD (BNO, TITLE, CONTENT, WRITER) 
		VALUES(SEQ_BOARD.NEXTVAL, #{title}, #{content}, #{writer})
	</insert>
	
	<insert id="insertSelectKey_bno">
	
		<selectKey keyProperty="bno" order="BEFORE" resultType="long">
			SELECT SEQ_BOARD.NEXTVAL FROM DUAL
		</selectKey>
		
		INSERT INTO TBL_BOARD (BNO, TITLE, CONTENT, WRITER) 
		VALUES(#{bno}, #{title}, #{content}, #{writer})
	</insert>
	
	<select id="read" resultType="com.koreait.domain.BoardVO">
		SELECT * FROM TBL_BOARD WHERE BNO = #{bno}
	</select>
	
	<delete id="delete">
		DELETE FROM TBL_BOARD WHERE BNO = #{bno}
	</delete>
	
	<update id="update">
		
		UPDATE TBL_BOARD
		SET 
		TITLE = #{title}, CONTENT = #{content}, WRITER = #{writer}, UPDATEDATE = SYSDATE
		WHERE BNO = #{bno}
	</update>
</mapper>








